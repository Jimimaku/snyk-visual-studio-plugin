namespace Snyk.VisualStudio.Extension.CLI
{
    using System;
    using System.Text.Json.Serialization;

    /// <summary>
    /// Snyk Open source vulnerability.
    /// </summary>
    public class Vulnerability : IComparable<Vulnerability>
    {
        private const string VulnerabilityDbUrl = "https://snyk.io/vuln/";

        /// <summary>
        /// Gets or sets a value indicating whether description.
        /// </summary>
        [JsonPropertyName("description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether exploit.
        /// </summary>
        [JsonPropertyName("exploit")]
        public string Exploit { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether fixed in.
        /// </summary>
        [JsonPropertyName("FixedIn")]
        public string[] FixedIn { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether id.
        /// </summary>
        [JsonPropertyName("id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether package name.
        /// </summary>
        [JsonPropertyName("packageName")]
        public string PackageName { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether severity.
        /// </summary>
        [JsonPropertyName("severity")]
        public string Severity { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether title.
        /// </summary>
        [JsonPropertyName("title")]
        public string Title { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether from.
        /// </summary>
        [JsonPropertyName("from")]
        public string[] From { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether name.
        /// </summary>
        [JsonPropertyName("name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether version.
        /// </summary>
        [JsonPropertyName("version")]
        public string Version { get; set; }

        /// <summary>
        /// Gets a value indicating whether remediation.
        /// </summary>
        public string Remediation => this.FixedIn == null ? string.Empty : string.Join(", ", this.FixedIn);

        /// <summary>
        /// Gets a value indicating whether URL.
        /// </summary>
        public string Url => VulnerabilityDbUrl + this.Id;

        /// <summary>
        /// Get package name title formed as "PackageName@Version: Title".
        /// </summary>
        /// <returns>Package name title string.</returns>
        public string GetPackageNameTitle() => $"{this.PackageName}@{this.Version}: {this.Title}";

        /// <summary>
        /// Check is critical severity.
        /// </summary>
        /// <returns>True if critical.</returns>
        public bool IsCriticalSeverity() => this.Severity == CLI.Severity.Critical;

        /// <summary>
        /// Check is high severity.
        /// </summary>
        /// <returns>True if high.</returns>
        public bool IsHighSeverity() => this.Severity == CLI.Severity.High;

        /// <summary>
        /// Check is medium severity.
        /// </summary>
        /// <returns>True is medium.</returns>
        public bool IsMediumSeverity() => this.Severity == CLI.Severity.Medium;

        /// <summary>
        /// Check is low severity.
        /// </summary>
        /// <returns>True if low.</returns>
        public bool IsLowSeverity() => this.Severity == CLI.Severity.Low;

        /// <summary>
        /// Convert current severity string to int representation. Please, see <see cref="Severity"/>.
        /// </summary>
        /// <returns>Severity int.</returns>
        public int SeverityToInt() => CLI.Severity.ToInt(this.Severity);

        /// <summary>
        /// Compare <see cref="Vulnerability"/> by severity.
        /// </summary>
        /// <param name="otherVulnerability">Vulnerability to compare.</param>
        /// <returns>Return 0 if equal and 1 or -1 if greater or lower.</returns>
        public int CompareTo(Vulnerability otherVulnerability) => otherVulnerability.SeverityToInt().CompareTo(this.SeverityToInt());
    }
}
